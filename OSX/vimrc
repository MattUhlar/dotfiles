"=====Colorscheme and Appearance=====
" Terminal uses 256 colors
set t_Co=256
colorscheme solarized
set background=dark
syntax on

" Incremental search highlighting
set incsearch

" Show number lines on file
set number

" vim-airline statusline appears at all times
set laststatus=2

" show matching brackets when text indicator is over them
set showmatch

"=====Spacing=====
filetype plugin indent on
set expandtab 
set tabstop=4 
set shiftwidth=4  
set softtabstop=4" 
set backspace=indent,eol,start

"=====Moving Around, Tabs, Windows and Buffers=====

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Change default mapping and the default command to invoke CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Display buffer list and prompt for number
map <leader>b :ls<CR>:b

"=====Folding=====

" toggle folds with spacebar
nnoremap <Space> za
" Set foreground color of folds
hi Folded ctermfg=247

"=====Plugins=====

" Allow YCM to work with UltiSnips 
let g:UltiSnipsSnippetsDir         = $HOME.'/.vim/UltiSnips/'
let g:UltiSnipsSnippetDirectories  = ["UltiSnips"]
let g:UltiSnipsExpandTrigger       = "<c-j>"
let g:UltiSnipsJumpForwardTrigger  = "<c-j>"
let g:UltiSnipsJumpBackwardTrigger = "<c-k>"
let g:UltiSnipsListSnippets        = "<c-h>"

let g:ycm_complete_in_comments = 1 
let g:ycm_seed_identifiers_with_syntax = 1 
let g:ycm_collect_identifiers_from_comments_and_strings = 1 

let g:ycm_global_ycm_extra_conf = '/Users/mattu/.vim/bundle/YouCompleteMe/.ycm_extra_conf.py'

" Improved ctrlp searching using cmatcher
let g:ctrlp_match_func = {'match' : 'matcher#cmatch'}
let g:ctrlp_show_hidden = 1
let g:ctrlp_working_path_mode = 'rw'

" Vundle
set nocompatible

filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'Raimondi/delimitMate'
Plugin 'sirver/ultisnips'
Plugin 'godlygeek/tabular'
Plugin 'henrik/vim-indexed-search'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'easymotion/vim-easymotion'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'derekwyatt/vim-scala'
Plugin 'vim-scripts/AutoComplPop'
Plugin 'JazzCore/ctrlp-cmatcher'
Plugin 'Valloric/YouCompleteMe'

" Snippets are seperate from the engine
Plugin 'honza/vim-snippets'

" Colorscheme
Plugin 'altercation/vim-colors-solarized'

filetype plugin indent on

"=====Custom Functions=====

" Fold all function, struct, and class bodies in a file [C/C++]
" NOTE: only works with brace-on-own-line style
"   ex: void foo()
"       {
"           bar();
"       }
function! FoldAll()
    let flags = 'W' " Do not wrap around EOF
    " Go to first line of file
    execute "normal gg"
    " Go to opening brace of each function/class/struct
    while search('^{', flags)
        " Fold until closing brace
        execute "normal zf%"
    endwhile
endfunction

